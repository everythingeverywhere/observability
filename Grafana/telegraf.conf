#[global_tags]
#  global_group = "steeltoe"

[agent]
  debug = false
  quiet = true
  omit_hostname = true

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################
[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2

  collectors_exclude = ["gocollector", "process"]

  tagexclude = ["output_type"]
  [outputs.prometheus_client.tagpass]
    output_type = ["metrics"]

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]

  tagexclude = ["output_type"]
  [outputs.influxdb.tagpass]
    output_type = ["logs"]

###############################################################################
#                                  INPUTS                                    #
###############################################################################
# Container metrics
# https://github.com/influxdata/telegraf/tree/master/plugins/inputs/docker
[[inputs.docker]]
  #name_override = "docker_stats"
  endpoint = "tcp://host.docker.internal:2375"
  gather_services = false
  #container_name_include = ["steeltoe-app"]
  container_name_exclude = ["telegraf","zipkin","prometheus","influxdb","grafana"]
  timeout = "5s"
  perdevice = true
  total = true
 
  [inputs.docker.tags]
    output_type = "metrics"

# GC and HTTP metrics
[[inputs.prometheus]]
  urls = ["http://steeltoe-app:80/actuators/prometheus"]
  metric_version = 2

  [inputs.prometheus.tags]
    actuator_type = "prometheus"
    output_type = "metrics"

[[inputs.docker_log]]
  endpoint = "tcp://host.docker.internal:2375"
  from_beginning = false
  #container_name_include = ["steeltoe-app"]
  container_name_exclude = ["telegraf","zipkin","prometheus","influxdb","grafana"]
  source_tag = false

  [inputs.docker_log.tags]
    output_type = "logs"

# Endpoint mappings
# https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http
# https://github.com/influxdata/telegraf/tree/master/plugins/parsers/json
[[inputs.http]]
  name_override = "app_endpoint_mappings"
  ## One or more URLs from which to read formatted metrics
  urls = ["http://steeltoe-app:80/actuators/mappings"]

  data_format = "json"
  json_query = "contexts.application.mappings.dispatcherServlets.*Controllers*"
  json_string_fields = ["*"]

  [inputs.http.tags]
    actuator_type = "mappings"
    output_type = "logs"
#Application Health
[[inputs.http]]
  name_override = "app_health"
  ## One or more URLs from which to read formatted metrics
  urls = ["http://steeltoe-app:80/actuators/health"]

  data_format = "json"
  #json_query = ""
  json_string_fields = ["*"]

  [inputs.http.tags]
    actuator_type = "health"
    output_type = "logs"
#Application Info
[[inputs.http]]
  name_override = "app_info"
  ## One or more URLs from which to read formatted metrics
  urls = ["http://steeltoe-app:80/actuators/info"]

  data_format = "json"
  #json_query = ""
  json_string_fields = ["*"]

  [inputs.http.tags]
    actuator_type = "info"
    output_type = "logs"
#Application Loggers
[[inputs.http]]
  name_override = "app_loggers"
  ## One or more URLs from which to read formatted metrics
  urls = ["http://steeltoe-app:80/actuators/loggers"]

  data_format = "json"
  json_query = "loggers"
  json_string_fields = ["*"]

  [inputs.http.tags]
    actuator_type = "loggers"
    output_type = "logs"

# [[processors.converter]]
#   namepass = ["app_endpoint_mappings"]

#   [processors.converter.fields]
#     integer = [
#       "bytes_sent",
#       "body_bytes_sent",
#       "request_length",
#     ]
#     float = [
#       "brotli_ratio",
#       "upstream_header_time",
#       "upstream_response_time",
#       "gzip_ratio",
#       "request_time"
#     ]

# [[processors.regex]]
#   namepass = ["app_endpoint_mappings"]

#   [[processors.regex.tags]]
#     key = "predicate"
#     pattern = "^([^/]+/[^ ;]+).*$"
#     replacement = "${1}"